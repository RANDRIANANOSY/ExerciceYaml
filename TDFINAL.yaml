openapi: 3.0.0
info:
  title: Football Competition Management API
  version: 1.0.0
  description: API for managing football competitions, teams, and players.

components:
  schemas:
    Competition:
      type: object
      properties:
        name:
          type: string
          example: LIGA
        location:
          type: string
          example: MADA

    Team:
      type: object
      properties:
        name:
          type: string
          example: Real Madrid
        slogan:
          type: string
          example: "Hala Madrid"
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    Player:
      type: object
      properties:
        name:
          type: string
          example: Lionel Messi
        number:
          type: integer
          example: 10
        dominantFoot:
          type: string
          enum: [Left, Right]
          example: Left

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 10

  parameters:
    TeamName:
      in: query
      name: teamName
      schema:
        type: string
      description: Filter teams by their name.

    PlayerName:
      in: query
      name: playerName
      schema:
        type: string
      description: Filter players by their name.

    Page:
      in: query
      name: page
      schema:
        type: integer
      required: true
      description: The page number to retrieve.

    PageSize:
      in: query
      name: pageSize
      schema:
        type: integer
      required: true
      description: The number of items per page.

paths:
  /competitions:
    get:
      summary: Get a list of competitions
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: List of competitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competition'
    post:
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '201':
          description: Competition created

  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - $ref: '#/components/parameters/TeamName'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                slogan:
                  type: string
      responses:
        '201':
          description: Team created

  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - $ref: '#/components/parameters/TeamName'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: List of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                slogan:
                  type: string
      responses:
        '201':
          description: Team created

  /teams/{teamId}/players:
    get:
      summary: Get a list of players for a specific team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PlayerName'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: List of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
    post:
      summary: Create a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Player created

  /teams/{teamId}/competitions:
    post:
      summary: Associate competitions to a team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Competition'
      responses:
        '200':
          description: Competitions associated with the team
