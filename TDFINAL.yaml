openapi: 3.0.3
info:
  title: Football Match Management API
  description: API for managing football competitions, teams, and players.
  version: 1.0.0
paths:
  /competitions:
    get:
      summary: Get a list of competitions
      parameters:
        - name: page
          in: query
          description: The page number for pagination
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          description: The number of items per page
          required: true
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: A list of competitions
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  competitions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Competition'
  /competitions/{competitionId}:
    get:
      summary: Get a specific competition
      parameters:
        - name: competitionId
          in: path
          description: The ID of the competition
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of a specific competition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competition'

  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - name: page
          in: query
          description: The page number for pagination
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          description: The number of items per page
          required: true
          schema:
            type: integer
            example: 10
        - name: teamName
          in: query
          description: Filter teams by name
          schema:
            type: string
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  teams:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'

  /teams/{teamId}:
    get:
      summary: Get a specific team
      parameters:
        - name: teamId
          in: path
          description: The ID of the team
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of a specific team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{teamId}/players:
    get:
      summary: Get a list of players for a specific team
      parameters:
        - name: teamId
          in: path
          description: The ID of the team
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page number for pagination
          required: true
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          description: The number of items per page
          required: true
          schema:
            type: integer
            example: 10
        - name: playerName
          in: query
          description: Filter players by name
          schema:
            type: string
      responses:
        '200':
          description: A list of players for the specified team
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                  pageSize:
                    type: integer
                  totalItems:
                    type: integer
                  totalPages:
                    type: integer
                  players:
                    type: array
                    items:
                      $ref: '#/components/schemas/Player'

  /teams/{teamId}/players:
    post:
      summary: Add a list of players to a specific team
      parameters:
        - name: teamId
          in: path
          description: The ID of the team
          required: true
          schema:
            type: string
      requestBody:
        description: List of players to add
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Player'
        required: true
      responses:
        '200':
          description: Successfully added players to the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{teamId}/competitions:
    post:
      summary: Associate a team with a list of competitions
      parameters:
        - name: teamId
          in: path
          description: The ID of the team
          required: true
          schema:
            type: string
      requestBody:
        description: List of competitions to associate with the team
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Competition'
        required: true
      responses:
        '200':
          description: Successfully associated the team with competitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

components:
  schemas:
    Competition:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "LIGA"
        location:
          type: string
          example: "SPAIN"
    
    Team:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "Real Madrid"
        slogan:
          type: string
          example: "Hala Madrid!"
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'

    Player:
      type: object
      properties:
        id:
          type: string
          example: "1"
        name:
          type: string
          example: "Cristiano Ronaldo"
        number:
          type: integer
          example: 7
        foot:
          type: string
          enum: [Left, Right]
          example: "Right"
